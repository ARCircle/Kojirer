name: CD (Production)

on:
  workflow_run:
    workflows: ["CI (Docker Build)"]
    types:
      - completed
    branches:
      - main
      - feature/k3s-cd
  workflow_dispatch:             # 手動実行も可能

# ===== 権限 =====
permissions:
  contents: read                # コード取得
  packages: write               # GHCR へ push
  id-token: write

concurrency:
  group: "deploy-production"
  cancel-in-progress: true      # 新しいデプロイが来たら前をキャンセル

jobs:
  deploy:
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch' }}
    runs-on: ubuntu-latest
    env:
      REGISTRY: ghcr.io
      IMAGE_NAME: ${{ github.repository }}
      IMAGE_TAG: ${{ github.sha }}

    steps:
    - uses: actions/checkout@v4
    - name: Prepare image tag
      id: meta
      run: |
        repo_lc="$(echo '${{ github.repository }}' | tr '[:upper:]' '[:lower:]')"
        echo "FULL_IMAGE=ghcr.io/${repo_lc}:${{ github.sha }}" >> "$GITHUB_OUTPUT"

    # Docker Build CIですでにビルド・プッシュ済みなので、ここではビルドをスキップ
    # イメージが存在することを確認
    - name: Check if image exists
      run: |
        echo "Using image: ${{ steps.meta.outputs.FULL_IMAGE }}"
        echo "Image should already be built and pushed by Docker Build CI workflow"

    - uses: imranismail/setup-kustomize@v1

    - name: Set image tag in kustomize overlay
      working-directory: k8s/overlays/prod
      run: |
        kustomize edit set image kojirer=${{ steps.meta.outputs.FULL_IMAGE }}

    - name: Build manifest with kustomize
      run: kustomize build k8s/overlays/prod > manifest.yaml

    - name: Apply manifest
      uses: actions-hub/kubectl@v1.33.3
      env:
        KUBE_CONFIG: ${{ secrets.KUBECONFIG }}
      with:
        args: apply -f manifest.yaml

    - name: Wait for rollout
      uses: actions-hub/kubectl@v1.33.3
      env:
        KUBE_CONFIG: ${{ secrets.KUBECONFIG }}
      with:
        args: rollout status deployment/kojirer --timeout=300s

