name: production deploy

on:
  push:
    branches:
      - main                     # main ブランチへの push で実行
  workflow_dispatch:             # 手動実行も可能

# ===== 権限 =====
permissions:
  contents: read                # コード取得
  packages: write               # GHCR へ push
  id-token: write

concurrency:
  group: "deploy-production"
  cancel-in-progress: true      # 新しいデプロイが来たら前をキャンセル

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      REGISTRY: ghcr.io
      IMAGE_NAME: ${{ github.repository }}
      IMAGE_TAG: ${{ github.sha }}
      FULL_IMAGE: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}

    steps:
    - uses: actions/checkout@v4
    - uses: docker/setup-buildx-action@v3
    - uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and push web image
      uses: docker/build-push-action@v6
      with:
        context: .
        file: Dockerfile
        push: true
        tags: ${{ env.FULL_IMAGE }}
        target: production
        cache-from: type=gha
        cache-to:   type=gha,mode=max

    - uses: imranismail/setup-kustomize@v1

    - uses: azure/setup-kubectl@v4
      with:
        version: "v1.32.5"

    - uses: azure/k8s-set-context@v4
      with:
        method: kubeconfig
        kubeconfig: ${{ secrets.KUBECONFIG }}

    - name: Set image tag in kustomize overlay
      working-directory: k8s/overlays/prod
      run: |
        kustomize edit set image kojirer=${FULL_IMAGE}

    - name: Deploy to k3s
      run: |
        kustomize build k8s/overlays/prod | kubectl apply -f -

    - name: Wait for rollout
      run: |
        kubectl rollout status deployment/kojirer --timeout=300s

