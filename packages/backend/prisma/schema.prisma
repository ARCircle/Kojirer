// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model orders {
  id               String   @id @default(uuid()) @db.Uuid
  num_sns_followed Int      @default(0) // SNSフォローされた数ぶんだけトッピングを無料にする
  create_datetime  DateTime @default(now())
  call_num         Int
  dons             dons[]
}

model dons {
  id              String           @id @default(uuid()) @db.Uuid
  order_id        String           @db.Uuid
  create_datetime DateTime         @default(now())
  update_datetime DateTime         @updatedAt
  order           orders           @relation(fields: [order_id], references: [id])
  don_customizes  don_customizes[]
}

model don_customizes {
  don_id     String @id @db.Uuid
  topping_id String @db.Uuid
  amount     Int // 負も取りうる (0がデフォルト量)

  customize customizes @relation(fields: [topping_id], references: [id])
  don       dons       @relation(fields: [don_id], references: [id])
}

model customizes {
  id               String             @id @default(uuid()) @db.Uuid
  label            String             @db.VarChar()
  available        Boolean?           @default(true)
  customize_prices customize_prices[]
  don_customizes   don_customizes[]
}

model customize_prices {
  customize_id String     @db.Uuid
  price        Int
  since        DateTime
  customize    customizes @relation(fields: [customize_id], references: [id])

  @@id([customize_id, since]) // 同じカスタマイズの値段に対して、同じ日付の価格は存在しない
}
